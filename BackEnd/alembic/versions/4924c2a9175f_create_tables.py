"""create tables

Revision ID: 4924c2a9175f
Revises: 5cb3fe70b897
Create Date: 2025-09-29 15:34:30.064127

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4924c2a9175f'
down_revision: Union[str, Sequence[str], None] = '5cb3fe70b897'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('provinces',
    sa.Column('province_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('province_id')
    )
    op.create_index(op.f('ix_provinces_province_id'), 'provinces', ['province_id'], unique=False)
    op.create_table('specializations',
    sa.Column('specialization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('descriptions', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('specialization_id')
    )
    op.create_index(op.f('ix_specializations_specialization_id'), 'specializations', ['specialization_id'], unique=False)
    op.create_table('city_municipality',
    sa.Column('city_municipality_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('zip_code', sa.String(length=10), nullable=True),
    sa.Column('province_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['province_id'], ['provinces.province_id'], ),
    sa.PrimaryKeyConstraint('city_municipality_id')
    )
    op.create_index(op.f('ix_city_municipality_city_municipality_id'), 'city_municipality', ['city_municipality_id'], unique=False)
    op.create_table('addresses',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('street', sa.String(length=255), nullable=False),
    sa.Column('barangay', sa.String(length=100), nullable=False),
    sa.Column('city_municipality_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['city_municipality_id'], ['city_municipality.city_municipality_id'], ),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_index(op.f('ix_addresses_address_id'), 'addresses', ['address_id'], unique=False)
    op.create_table('doctors',
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('specialization_id', sa.Integer(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.address_id'], ),
    sa.ForeignKeyConstraint(['specialization_id'], ['specializations.specialization_id'], ),
    sa.PrimaryKeyConstraint('doctor_id')
    )
    op.create_index(op.f('ix_doctors_doctor_id'), 'doctors', ['doctor_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('fname', sa.String(), nullable=False),
    sa.Column('lname', sa.String(), nullable=False),
    sa.Column('mname', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('sex', sa.Boolean(), nullable=True),
    sa.Column('dob', sa.DateTime(), nullable=True),
    sa.Column('contact_number', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'DOCTOR', 'STAFF', 'PATIENT', name='userrole'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('google_id', sa.String(), nullable=True),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('reset_token', sa.String(), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.address_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('google_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('appointments',
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('appointment_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'COMPLETED', 'CANCELLED', name='appointmentstatus'), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.doctor_id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('appointment_id')
    )
    op.create_index(op.f('ix_appointments_appointment_id'), 'appointments', ['appointment_id'], unique=False)
    op.create_table('notifications',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('source_user_id', sa.Integer(), nullable=True),
    sa.Column('target_user_id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.appointment_id'], ),
    sa.ForeignKeyConstraint(['source_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['target_user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_index(op.f('ix_notifications_notification_id'), 'notifications', ['notification_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notifications_notification_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_appointments_appointment_id'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_doctors_doctor_id'), table_name='doctors')
    op.drop_table('doctors')
    op.drop_index(op.f('ix_addresses_address_id'), table_name='addresses')
    op.drop_table('addresses')
    op.drop_index(op.f('ix_city_municipality_city_municipality_id'), table_name='city_municipality')
    op.drop_table('city_municipality')
    op.drop_index(op.f('ix_specializations_specialization_id'), table_name='specializations')
    op.drop_table('specializations')
    op.drop_index(op.f('ix_provinces_province_id'), table_name='provinces')
    op.drop_table('provinces')
    # ### end Alembic commands ###
